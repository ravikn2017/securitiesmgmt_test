const mongoose = require("mongoose");

const companyCurrentFinancialsSchema = new mongoose.Schema(
  {
    symbol: {
      type: String,
      required: [true, "A company must have a symbol"],
      unique: true,
      trim: true,
    },
    year: {
      type: Number,
      required: [true, "A financial record must have a year"],
    },
    // Income Statement Fields
    incomeStatement: {
      taxRateForCalcs: { type: Number, default: 0 },
      netIncomeFromContinuingOperationNetMinorityInterest: {
        type: Number,
        default: 0,
      },
      reconciledDepreciation: { type: Number, default: 0 },
      ebitda: { type: Number, default: 0 },
      ebit: { type: Number, default: 0 },
      interestExpense: { type: Number, default: 0 },
      interestIncome: { type: Number, default: 0 },
      netIncomeFromContinuingAndDiscontinuedOperation: {
        type: Number,
        default: 0,
      },
      dilutedAverageShares: { type: Number, default: 0 },
      basicAverageShares: { type: Number, default: 0 },
      dilutedEPS: { type: Number, default: 0 },
      basicEPS: { type: Number, default: 0 },
      netIncomeCommonStockholders: { type: Number, default: 0 },
      netIncome: { type: Number, default: 0 },
      netIncomeIncludingNoncontrollingInterests: { type: Number, default: 0 },
      taxProvision: { type: Number, default: 0 },
      preTaxIncome: { type: Number, default: 0 },
      operatingIncome: { type: Number, default: 0 },
      operatingExpense: { type: Number, default: 0 },
      depreciationAndAmortization: { type: Number, default: 0 },
      amortization: { type: Number, default: 0 },
      depreciation: { type: Number, default: 0 },
      sellingGeneralAndAdministration: { type: Number, default: 0 },
      sellingAndMarketingExpense: { type: Number, default: 0 },
      generalAndAdministrativeExpense: { type: Number, default: 0 },
      grossProfit: { type: Number, default: 0 },
      costOfRevenue: { type: Number, default: 0 },
      totalRevenue: { type: Number, default: 0 },
      operatingRevenue: { type: Number, default: 0 },
    },
    // Balance Sheet Fields
    balanceSheet: {
      shareIssued: { type: Number, default: 0 },
      netDebt: { type: Number, default: 0 },
      totalDebt: { type: Number, default: 0 },
      tangibleBookValue: { type: Number, default: 0 },
      workingCapital: { type: Number, default: 0 },
      netTangibleAssets: { type: Number, default: 0 },
      capitalLeaseObligations: { type: Number, default: 0 },
      commonStockEquity: { type: Number, default: 0 },
      stockholdersEquity: { type: Number, default: 0 },
      otherEquityInterest: { type: Number, default: 0 },
      retainedEarnings: { type: Number, default: 0 },
      totalLiabilitiesNetMinorityInterest: { type: Number, default: 0 },
      otherNonCurrentLiabilities: { type: Number, default: 0 },
      nonCurrentDeferredLiabilities: { type: Number, default: 0 },
      longTermDebtAndCapitalLeaseObligation: { type: Number, default: 0 },
      longTermDebt: { type: Number, default: 0 },
      longTermProvisions: { type: Number, default: 0 },
      currentLiabilities: { type: Number, default: 0 },
      currentDebtAndCapitalLeaseObligation: { type: Number, default: 0 },
      currentDebt: { type: Number, default: 0 },
      payables: { type: Number, default: 0 },
      dividendsPayable: { type: Number, default: 0 },
      totalTaxPayable: { type: Number, default: 0 },
      accountsPayable: { type: Number, default: 0 },
      totalAssets: { type: Number, default: 0 },
      totalNonCurrentAssets: { type: Number, default: 0 },
      otherNonCurrentAssets: { type: Number, default: 0 },
      availableForSaleSecurities: { type: Number, default: 0 },
      tradingSecurities: { type: Number, default: 0 },
      goodwillAndOtherIntangibleAssets: { type: Number, default: 0 },
      otherIntangibleAssets: { type: Number, default: 0 },
      goodwill: { type: Number, default: 0 },
      netPPE: { type: Number, default: 0 },
      currentAssets: { type: Number, default: 0 },
      otherCurrentAssets: { type: Number, default: 0 },
      inventory: { type: Number, default: 0 },
      otherReceivables: { type: Number, default: 0 },
      taxesReceivable: { type: Number, default: 0 },
      accountsReceivable: { type: Number, default: 0 },
      grossAccountsReceivable: { type: Number, default: 0 },
      cashCashEquivalentsAndShortTermInvestments: { type: Number, default: 0 },
      otherShortTermInvestments: { type: Number, default: 0 },
      cashAndCashEquivalents: { type: Number, default: 0 },
      cashEquivalents: { type: Number, default: 0 },
    },
    // Cash Flow Statement Fields
    cashFlow: {
      freeCashFlow: { type: Number, default: 0 },
      repaymentOfDebt: { type: Number, default: 0 },
      issuanceOfDebt: { type: Number, default: 0 },
      capitalExpenditure: { type: Number, default: 0 },
      changesInCash: { type: Number, default: 0 },
      financingCashFlow: { type: Number, default: 0 },
      cashDividendsPaid: { type: Number, default: 0 },
      longTermDebtPayments: { type: Number, default: 0 },
      saleOfInvestment: { type: Number, default: 0 },
      purchaseOfInvestment: { type: Number, default: 0 },
      netBusinessPurchaseAndSale: { type: Number, default: 0 },
      saleOfBusiness: { type: Number, default: 0 },
      purchaseOfBusiness: { type: Number, default: 0 },
      netPPEPurchaseAndSale: { type: Number, default: 0 },
      capitalExpenditureReported: { type: Number, default: 0 },
      operatingCashFlow: { type: Number, default: 0 },
      changeInWorkingCapital: { type: Number, default: 0 },
      changeInOtherCurrentAssets: { type: Number, default: 0 },
      changeInPayable: { type: Number, default: 0 },
      changeInReceivables: { type: Number, default: 0 },
      depreciationAndAmortization: { type: Number, default: 0 },
      netIncomeFromContinuingOperations: { type: Number, default: 0 },
    },
    lastUpdated: {
      type: Date,
      default: Date.now,
    },
  },
  {
    timestamps: true,
    toJSON: { virtuals: true },
    toObject: { virtuals: true },
  }
);

const CompanyCurrentFinancials = mongoose.model(
  "Company-Current-Financials",
  companyCurrentFinancialsSchema
);

module.exports = CompanyCurrentFinancials;
